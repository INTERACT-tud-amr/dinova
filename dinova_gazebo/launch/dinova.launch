<?xml version="1.0"?>
<launch>
    <!-- Argumnets for Kinova robot -->
    <arg name="dingo_id" default="" />
    <arg name="mode" default="velocity" />  
    <arg name="load_gripper" default="true" />
    <arg name="rviz" default="false" />

    <!-- Arguments for Gazebo -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="dyn_obstacle" default="false" />
    <arg name="initial_joint_positions"
       doc="Initial joint configuration of the panda. Specify as a list of name/value pairs in form of '-J [name-of-joint] [value-in-rad]'. Default is a 90 degree bend in the elbow"
       default="-J $(arg dingo_id)omni_joint_x 0.0
                -J $(arg dingo_id)omni_joint_y 0.0
                -J $(arg dingo_id)omni_joint_theta 0.0
                -J $(arg dingo_id)joint_1 0.0
                -J $(arg dingo_id)joint_2 0.0
                -J $(arg dingo_id)joint_3 0.0
                -J $(arg dingo_id)joint_4 1.7
                -J $(arg dingo_id)joint_5 1.57
                -J $(arg dingo_id)joint_6 -1.57
                -J $(arg dingo_id)right_finger_bottom_joint 0.001" 
                />


    <!-- Load urdf -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find dinova_gazebo)/urdf/dinova_gazebo.xacro'
            robot_id:=$(arg dingo_id)
            mode:=$(arg mode)
            load_gripper:=$(arg load_gripper)"/>

    <group if="$(arg dyn_obstacle)">
        <include file="$(find gazebo_ros)/launch/empty_world.launch">
            <arg name="world_name" value="$(find dinova_gazebo)/config/dingo_kinova_dyn_obstacle.world"/>
            <arg name="debug" value="$(arg debug)" />
            <arg name="gui" value="$(arg gui)" />
            <arg name="paused" value="$(arg paused)"/>
            <arg name="use_sim_time" value="$(arg use_sim_time)"/>
            <arg name="headless" value="$(arg headless)"/>
        </include>
    </group>
    <group unless="$(arg dyn_obstacle)">
        <include file="$(find gazebo_ros)/launch/empty_world.launch">
            <arg name="world_name" value="$(find dinova_gazebo)/config/dingo_kinova.world"/>
            <arg name="debug" value="$(arg debug)" />
            <arg name="gui" value="$(arg gui)" />
            <arg name="paused" value="$(arg paused)"/>
            <arg name="use_sim_time" value="$(arg use_sim_time)"/>
            <arg name="headless" value="$(arg headless)"/>
        </include>
    </group>


    <!-- Spawn model in Gazebo -->
    <node name="model_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false"
          output="screen" args="-param robot_description -urdf -model dinova $(arg initial_joint_positions)"/>
    <param name="/$(env ROBOT_NAME)/dinova_fk_description" textfile="$(find dinova_control)/config/dingo1_dinova.urdf"/>

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find dinova_gazebo)/config/gazebo_controllers.yaml" command="load"/>

    <!-- load the controllers -->
    <group if="$(eval arg('mode') == 'position')">
        <node name="controllers_spawner" pkg="controller_manager" type="spawner" respawn="false"
                output="screen" args="
                    joint_state_controller
                    omnidrive_position_controller
                    joints_position_controller"/>    
    </group>
    <group if="$(eval arg('mode') == 'velocity')">
        <node name="controllers_spawner" pkg="controller_manager" type="spawner" respawn="false"
                output="screen" args="
                    joint_state_controller
                    omnidrive_velocity_controller
                    joints_velocity_controller"/>    
    </group>
    <!-- load the gripper controller -->
    <group if="$(eval arg('load_gripper'))">
        <node name="controllers_gripper_spawner" pkg="controller_manager" type="spawner" respawn="false"
                output="screen" args="
                    gripper_position_controller
                    "/>    
    </group>
            

    <!-- convert joint states to TF transforms for rviz, etc -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
        <!-- <param name="publish_frequency" value="100.0"/> -->
    </node>
    <node name="dinova_gazebo_state_publisher" pkg="dinova_gazebo" type="dinova_gazebo_state_publisher.py" output="screen" />

    <group if="$(eval arg('rviz'))">
        <node name="rviz" pkg="rviz" type="rviz" args="-d $(find dinova_gazebo)/config/dinova.rviz" required="true" />
    </group>

</launch>

   
